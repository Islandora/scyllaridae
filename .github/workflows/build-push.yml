name: build-push-ar
on:
  workflow_call:
    inputs:
      dockerFile:
        required: true
        type: string
jobs:
  build-push-ar:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:

    - uses: 'actions/checkout@v4'

    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ${{ inputs.dockerFile }}
        verbose: true

    - name: Extract branch or tag name as docker tag
      shell: bash
      run: |-
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          TAG=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/[^a-zA-Z0-9._-]//g' | awk '{print substr($0, length($0)-120)}')
        else
          TAG=$(echo "${GITHUB_REF#refs/heads/}" | sed 's/[^a-zA-Z0-9._-]//g' | awk '{print substr($0, length($0)-120)}')
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        SHA=$(echo ${GITHUB_SHA} | cut -c1-7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
      id: extract_tag

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Setup docker build
      shell: bash
      run: |-
        # aka base build
        if [ ${{ inputs.dockerFile }} == "Dockerfile" ]; then
          echo "image=scyllaridae" >> $GITHUB_OUTPUT
          echo "context=." >> $GITHUB_OUTPUT
          exit 0
        fi

        DIR=$(dirname "${{ inputs.dockerFile }}")
        echo "image=scyllaridae-$(basename $DIR)" >> $GITHUB_OUTPUT
        echo "context=$DIR" >> $GITHUB_OUTPUT
      id: setup

    - name: Docker Hub Login
      uses: docker/login-action@v3
      with:
        registry: 'docker.io'
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Determine platforms
      id: determine-platforms
      run: |
        if [[ "${{steps.setup.outputs.image}}" == "scyllaridae-whisper" ]]; then
          echo "DOCKER_PLATFORMS=linux/amd64" >> $GITHUB_ENV
        else
          echo "DOCKER_PLATFORMS=linux/amd64,linux/arm64" >> $GITHUB_ENV
        fi

    - name: Build and push dockerhub
      uses: docker/build-push-action@v5
      with:
        context: ${{steps.setup.outputs.context}}
        platforms: ${{ env.DOCKER_PLATFORMS }}
        build-args: |
          TAG=${{steps.extract_tag.outputs.tag}}
        push: true
        tags: |
          lehighlts/${{steps.setup.outputs.image}}:${{steps.extract_tag.outputs.tag}}
          lehighlts/${{steps.setup.outputs.image}}:${{steps.extract_tag.outputs.tag}}-${{steps.extract_tag.outputs.sha}}
