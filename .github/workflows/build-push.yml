name: build-push-ar
on:
  workflow_call:
    inputs:
      dockerFile:
        required: true
        type: string
jobs:
  build-push-ar:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      id-token: write
    steps:

    - uses: 'actions/checkout@v4'

    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: ${{ inputs.dockerFile }}
        verbose: true

    - name: Extract branch or tag name as docker tag
      shell: bash
      run: |-
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
          TAG=$(echo "${GITHUB_REF#refs/tags/}" | sed 's/[^a-zA-Z0-9._-]//g' | awk '{print substr($0, length($0)-120)}')
        else
          TAG=$(echo "${GITHUB_REF#refs/heads/}" | sed 's/[^a-zA-Z0-9._-]//g' | awk '{print substr($0, length($0)-120)}')
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        SHA=$(echo ${GITHUB_SHA} | cut -c1-7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
      id: extract_tag

    - name: Setup docker build
      shell: bash
      run: |-
        # aka base build
        if [ ${{ inputs.dockerFile }} == "Dockerfile" ]; then
          echo "image=scyllaridae" >> $GITHUB_OUTPUT
          echo "context=." >> $GITHUB_OUTPUT
          exit 0
        fi

        DIR=$(dirname "${{ inputs.dockerFile }}")
        echo "image=scyllaridae-$(basename $DIR)" >> $GITHUB_OUTPUT
        echo "context=$DIR" >> $GITHUB_OUTPUT
      id: setup

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v2'
      with:
        workload_identity_provider: ${{ secrets.GCLOUD_OIDC_POOL }}
        create_credentials_file: true
        service_account: ${{ secrets.GSA }}
        token_format: 'access_token'

    - name: GAR login
      uses: 'docker/login-action@v3'
      with:
        registry: 'us-docker.pkg.dev'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Docker Hub Login
      uses: docker/login-action@v3
      with:
        registry: 'docker.io'
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push GAR
      uses: docker/build-push-action@v5
      with:
        context: ${{steps.setup.outputs.context}}
        build-args: |
          TAG=${{steps.extract_tag.outputs.tag}}
          DOCKER_REPOSITORY=us-docker.pkg.dev/${{ secrets.GCLOUD_PROJECT }}/public
        push: true
        tags: |
          lehighlts/${{steps.setup.outputs.image}}:${{steps.extract_tag.outputs.tag}}
          lehighlts/${{steps.setup.outputs.image}}:${{steps.extract_tag.outputs.tag}}-${{steps.extract_tag.outputs.sha}}

    - name: Build and push dockerhub
      uses: docker/build-push-action@v5
      with:
        context: ${{steps.setup.outputs.context}}
        build-args: |
          TAG=${{steps.extract_tag.outputs.tag}}
          DOCKER_REPOSITORY=lehighlts
        push: true
        tags: |
          lehighlts/${{steps.setup.outputs.image}}:${{steps.extract_tag.outputs.tag}}
          lehighlts/${{steps.setup.outputs.image}}:${{steps.extract_tag.outputs.tag}}-${{steps.extract_tag.outputs.sha}}
